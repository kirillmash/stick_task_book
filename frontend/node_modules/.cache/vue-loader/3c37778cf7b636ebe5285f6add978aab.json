{"remainingRequest":"C:\\shchma\\stick_task\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\shchma\\stick_task\\frontend\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\shchma\\stick_task\\frontend\\src\\App.vue","mtime":1619005421918},{"path":"C:\\shchma\\stick_task\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\shchma\\stick_task\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\shchma\\stick_task\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\shchma\\stick_task\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\shchma\\stick_task\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMyYzNlNTA7CiAgbWFyZ2luLXRvcDogNjBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <form @submit.prevent=\"submitForm\">\n      <div class=\"form-group row\">\n        <input type=\"text\" class=\"form-control col-3 mx-2\" placeholder=\"title\" v-model=\"book.title\">\n        <input type=\"text\" class=\"form-control col-3 mx-2\" placeholder=\"author\" v-model=\"book.author\">\n        <input type=\"text\" class=\"form-control col-3 mx-2\" placeholder=\"year\" v-model=\"book.year\">\n        <button class=\"btn btn-success\">Submit</button>\n      </div>\n    </form>\n    <table class=\"table\">\n        <thead>\n            <th>Title</th>\n            <th>Author</th>\n            <th>Year</th>\n        </thead>\n        <tbody>\n            <tr v-for=\"book in books\" :key=\"book.id\" @dblclick=\"$data.book = book\">\n                <td>{{ book.title }}</td>\n                <td>{{ book.author }}</td>\n                <td>{{ book.year }}</td>\n                <td>\n                    <button class=\"btn btn-outline-danger btn-sm mx-1\" @click=\"deleteBook\">X</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  data() {\n        return {\n            book: {\n              'title': '',\n              'author': '',\n              'year': '',\n\n            },\n            books: []\n        }\n    },\n  async created(){\n        await this.getBooks();\n  },\n\n  methods: {\n        submitForm(){\n          if (this.book.id === undefined){\n            this.createBook();\n          } else {\n            this.editBook();\n          }\n\n        },\n        async getBooks(){\n          var response = await fetch('http://127.0.0.1:8000/api/books/');\n          this.books = await response.json();\n\n        },\n        async createBook(){\n          await this.getBooks();\n\n          await fetch('http://127.0.0.1:8000/api/books/', {\n            method: 'post',\n            headers: {\n              'content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.book)\n          });\n            await this.getBooks();\n\n        },\n        async editBook(){\n          await this.getBooks();\n\n          await fetch(`http://127.0.0.1:8000/api/books/${this.book.id}/`, {\n            method: 'put',\n            headers: {\n              'content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.book)\n          });\n            await this.getBooks();\n            this.book = {};\n\n        },\n        async deleteBook(){\n          await this.getBooks();\n\n          await fetch(`http://127.0.0.1:8000/api/books/${this.book.id}/`, {\n            method: 'delete',\n            headers: {\n              'content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.book)\n          });\n            await this.getBooks();\n\n        }\n  }\n\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]}]}